"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const o=require("@cosmicmind/foundationjs"),N=(e,t)=>e===t?0:e>t?1:-1,D=(e,t)=>e===t?0:e>t?1:-1,Q=(e,t)=>e.key===t.key?0:e.key>t.key?1:-1,j=(e,t)=>e.key===t.key?0:e.key>t.key?1:-1,i=void 0,B=(e,t)=>{for(let r=1,n=e.length;r<n;++r){const s=e[r];let f=r-1;for(;0<=f&&0<t(e[f],s);)e[f+1]=e[f],--f;e[f+1]=s}},H=(e,t,r,n,s)=>{const f=r-t+1,a=n-r;let u,c,l;const g=[],h=[];for(u=0;u<f;++u)g[u]=e[t+u];for(c=0;c<a;++c)h[c]=e[r+c+1];for(u=0,c=0,l=t;u<f&&c<a;)1>s(g[u],h[c])?(e[l]=g[u],++u):(e[l]=h[c],++c),++l;for(;u<f;)e[l]=g[u],++u,++l;for(;c<a;)e[l]=h[c],++c,++l},C=(e,t,r,n)=>{if(t<r){const s=Math.floor(t+(r-t)/2);C(e,t,s,n),C(e,s+1,r,n),H(e,t,s,r,n)}},K=(e,t)=>C(e,0,e.length-1,t),O=(e,t)=>{let r=0;for(let n=0,s=e.length;n<s;++n){r=n;for(let a=n+1;a<s;++a)0<t(e[r],e[a])&&(r=a);const f=e[r];e[r]=e[n],e[n]=f}},m=(e,t)=>e===t?0:-1,M=e=>({...e??{},parent:i}),q=()=>({top:i,count:0});function E(e){return e.top}function G(e,t){t.parent=e.top,e.top=t,++e.count}function T(e){const t=e.top;return o.guard(t)&&(e.top=t.parent,t.parent=i,--e.count),t}function*k(e){let t=e.top;for(;o.guard(t);)yield t,t=t.parent}function*x(e){let t=e;for(;o.guard(t);)yield t,t=t.parent}function*J(e){let t=e.parent;for(;o.guard(t);)yield t,t=t.parent}function U(e){for(;o.guard(e.top);)T(e)}function z(e){let t=e.parent,r=0;for(;o.guard(t);)++r,t=t.parent;return r}function V(e,t,r=m){return o.guard(e.top)&&r(e.top,t)===0}function W(e,t,r=m){for(const n of k(e))if(r(n,t)===0)return!0;return!1}function X(e,...t){const r=new Set;e:for(const n of k(e)){for(const s of t)if(!s(n))continue e;r.add(n)}return r}const p=(e,t)=>e===t?0:e>t?1:-1,Y=e=>({...e,next:i,previous:i}),A=()=>({first:i,last:i,count:0});function y(e,t){o.guard(e.first)?(e.first.previous=t,t.next=e.first,t.previous=i):(e.last=t,t.previous=i,t.next=i),e.first=t,++e.count}function v(e){const t=e.first;if(o.guard(t)){const r=t.next;o.guard(r)?(e.first=r,r.previous=i):(e.first=i,e.last=i),t.previous=i,t.next=i,--e.count}return t}function F(e,t){o.guard(e.last)?(e.last.next=t,t.previous=e.last,t.next=i):(e.first=t,t.previous=i,t.next=i),e.last=t,++e.count}function S(e){const t=e.last;if(o.guard(t)){const r=t.previous;o.guard(r)?(e.last=r,r.next=i):(e.first=i,e.last=i),t.previous=i,t.next=i,--e.count}return t}function Z(e,t,r,n=p){if(o.guard(e.first)&&n(e.first,r)===0)y(e,t);else{const s=r.previous;o.guard(s)&&(s.next=t,t.previous=s,t.next=r,r.previous=t,++e.count)}}function _(e,t,r=p){const n=t.previous;if(o.guard(e.first)&&o.guard(n)&&r(e.first,n)===0)v(e);else if(o.guard(n)){const s=n.previous;o.guard(s)&&(t.previous=s,s.next=t,n.previous=i,n.next=i,--e.count)}return n}function $(e,t,r,n=p){if(o.guard(e.last)&&n(e.last,r)===0)F(e,t);else{const s=r.next;o.guard(s)&&(s.previous=t,t.next=s,t.previous=r,r.next=t,++e.count)}}function b(e,t,r=p){const n=t.next;if(o.guard(e.last)&&o.guard(n)&&r(e.last,n)===0)S(e);else if(o.guard(n)){const s=n.next;o.guard(s)&&(s.previous=t,t.next=s,n.previous=i,n.next=i,--e.count)}return n}function ee(e,t,r=p){if(o.guard(e.first)&&r(e.first,t)===0)v(e);else if(o.guard(e.last)&&r(e.last,t)===0)S(e);else{const n=t.previous,s=t.next;o.guard(n)&&o.guard(s)&&(n.next=s,s.previous=n,t.previous=i,t.next=i,--e.count)}}function*I(e){let t=e.first;for(;o.guard(t);)yield t,t=t.next}function*te(e){let t=e.last;for(;o.guard(t);)yield t,t=t.previous}function*re(e){let t=e;for(;o.guard(t);)yield t,t=t.next}function*ne(e){let t=e;for(;o.guard(t);)yield t,t=t.previous}function oe(e){for(;o.guard(e.first);)v(e)}function w(e,t,r=p){return o.guard(e.first)&&r(e.first,t)===0}function L(e,t,r=p){return o.guard(e.last)&&r(e.last,t)===0}function se(e,t){for(const r of I(e))if(r===t)return!0;return!1}function ie(e,...t){const r=new Set;e:for(const n of I(e)){for(const s of t)if(!s(n))continue e;r.add(n)}return r}const d=(e,t)=>e===t?0:e>t?1:-1,ue=e=>({...e??{},parent:i,next:i,previous:i,children:A(),size:1});function ce(e,t){e.parent=t,y(t.children,e),R(t,e.size)}function fe(e,t){e.parent=t,F(t.children,e),R(t,e.size)}const ae=e=>z(e);function le(e){return i===e.parent}function pe(e){return e.children.count===0}function de(e,t,r=d){return o.guard(e.parent)&&r(e.parent,t)===0}function ge(e,t,r=d){return w(t.children,e,r)}function he(e,t,r=d){return L(t.children,e,r)}function ve(e,t,r=d){return w(t.children,e,r)&&L(t.children,e,r)}function R(e,t){o.assert(0<t,"size must be greater than 0");for(const r of x(e))r.size+=t}function Ie(e,t){o.assert(0<t,"size must be greater than 0");for(const r of x(e))r.size-=t}function*P(e){yield e;for(const t of I(e.children))yield*P(t)}function Ce(e,...t){const r=new Set;e:for(const n of P(e)){for(const s of t)if(!s(n))continue e;r.add(n)}return r}exports.ListCompareFn=p;exports.SentinelNode=i;exports.StackCompareFn=m;exports.TreeCompareFn=d;exports.insertionSort=B;exports.listAppend=F;exports.listClear=oe;exports.listCreate=A;exports.listHas=se;exports.listInsert=y;exports.listInsertAfter=$;exports.listInsertBefore=Z;exports.listIsFirst=w;exports.listIsLast=L;exports.listIterateFromFirst=I;exports.listIterateFromLast=te;exports.listIterateToNext=re;exports.listIterateToPrevious=ne;exports.listNodeCreate=Y;exports.listQuery=ie;exports.listRemove=ee;exports.listRemoveAfter=b;exports.listRemoveBefore=_;exports.listRemoveFirst=v;exports.listRemoveLast=S;exports.mergeSort=K;exports.numericCompare=D;exports.numericKeyCompare=j;exports.selectionSort=O;exports.stackClear=U;exports.stackCreate=q;exports.stackDepth=z;exports.stackHas=W;exports.stackIsTop=V;exports.stackIterateFrom=x;exports.stackIterateToParent=J;exports.stackIterator=k;exports.stackNodeCreate=M;exports.stackPeek=E;exports.stackPop=T;exports.stackPush=G;exports.stackQuery=X;exports.stringCompare=N;exports.stringKeyCompare=Q;exports.treeAppendChild=fe;exports.treeCreate=ue;exports.treeDecreaseSize=Ie;exports.treeDepth=ae;exports.treeIncreaseSize=R;exports.treeInsertChild=ce;exports.treeIsChild=de;exports.treeIsFirstChild=ge;exports.treeIsLastChild=he;exports.treeIsLeaf=pe;exports.treeIsOnlyChild=ve;exports.treeIsRoot=le;exports.treeIterator=P;exports.treeQuery=Ce;
